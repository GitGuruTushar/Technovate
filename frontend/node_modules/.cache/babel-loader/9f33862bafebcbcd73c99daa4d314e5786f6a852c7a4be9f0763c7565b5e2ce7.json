{"ast":null,"code":"var _jsxFileName = \"/Users/tusharmishra/MERN-PROJECT/frontend/src/components/Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(\"${process.env.REACT_APP_BASE_URL}/api/v4/ai/getTasks\", {\n          withCredentials: true\n        });\n        const {\n          tasks,\n          lastGenerated\n        } = response.data.data;\n        if (!tasks || tasks.length === 0) {\n          await regenerateTasks();\n        } else {\n          const lastGeneratedDate = new Date(lastGenerated);\n          const today = new Date();\n          const diffDays = Math.floor((today - lastGeneratedDate) / (1000 * 60 * 60 * 24));\n          if (diffDays >= 20) {\n            await regenerateTasks();\n          } else {\n            setTasks(tasks);\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    const regenerateTasks = async () => {\n      try {\n        const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/api/v4/ai/generate-task`, {}, {\n          withCredentials: true\n        });\n        setTasks(response.data.data);\n      } catch (error) {\n        console.error(\"Error generating tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleTaskCompletion = async index => {\n    const updatedTasks = tasks.map((task, i) => {\n      if (i === index) {\n        return {\n          ...task,\n          completed: !task.completed\n        };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n    try {\n      await axios.put(`${process.env.REACT_APP_BASE_URL}/api/v4/ai/update-task`, {\n        tasksCompleted: updatedTasks\n      }, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error(\"Error updating tasks:\", error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `\n      radial-gradient(circle at top left, rgba(138, 43, 226, 0.4), transparent 50%),\n      radial-gradient(circle at bottom right, rgba(138, 43, 226, 0.4), transparent 50%)\n    `,\n      backgroundColor: '#121212',\n      height: \"100vh\",\n      transform: \"translateY(-20px)\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      style: {\n        transform: \"translateY(90px)\",\n        height: \"80vh\",\n        overflow: \"scroll\",\n        backgroundColor: \"transparent\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: \"#fff\",\n          textAlign: \"center\"\n        },\n        children: \"Your Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"tasks-list\",\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `task-item ${task.completed ? 'completed' : ''}`,\n          style: {\n            backgroundColor: \"#fff\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => handleTaskCompletion(index),\n            className: \"task-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"task-text\",\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"suOgpW3t2nMZzUgwyaGqSRlDRtE=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","loading","setLoading","fetchTasks","response","get","withCredentials","lastGenerated","data","length","regenerateTasks","lastGeneratedDate","Date","today","diffDays","Math","floor","error","console","post","process","env","REACT_APP_BASE_URL","handleTaskCompletion","index","updatedTasks","map","task","i","completed","put","tasksCompleted","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","backgroundColor","height","transform","className","overflow","color","textAlign","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/tusharmishra/MERN-PROJECT/frontend/src/components/Tasks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Tasks() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get(\"${process.env.REACT_APP_BASE_URL}/api/v4/ai/getTasks\", { withCredentials: true });\r\n        const { tasks, lastGenerated } = response.data.data;\r\n\r\n        if (!tasks || tasks.length === 0) {\r\n          await regenerateTasks();\r\n        } else {\r\n          const lastGeneratedDate = new Date(lastGenerated);\r\n          const today = new Date();\r\n          const diffDays = Math.floor((today - lastGeneratedDate) / (1000 * 60 * 60 * 24));\r\n\r\n          if (diffDays >= 20) {\r\n            await regenerateTasks();\r\n          } else {\r\n            setTasks(tasks);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching tasks:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const regenerateTasks = async () => {\r\n      try {\r\n        const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/api/v4/ai/generate-task`, {}, { withCredentials: true });\r\n        setTasks(response.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error generating tasks:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleTaskCompletion = async (index) => {\r\n    const updatedTasks = tasks.map((task, i) => {\r\n      if (i === index) {\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n\r\n    setTasks(updatedTasks);\r\n\r\n    try {\r\n      await axios.put(`${process.env.REACT_APP_BASE_URL}/api/v4/ai/update-task`, { tasksCompleted: updatedTasks }, { withCredentials: true });\r\n    } catch (error) {\r\n      console.error(\"Error updating tasks:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{backgroundImage: `\r\n      radial-gradient(circle at top left, rgba(138, 43, 226, 0.4), transparent 50%),\r\n      radial-gradient(circle at bottom right, rgba(138, 43, 226, 0.4), transparent 50%)\r\n    `,backgroundColor: '#121212', height:\"100vh\", transform:\"translateY(-20px)\"}}>\r\n      <div className=\"tasks-container\" style={{ transform:\"translateY(90px)\", height:\"80vh\", overflow:\"scroll\", backgroundColor:\"transparent\"}}>\r\n      <h2 style={{color:\"#fff\", textAlign:\"center\"}}>Your Tasks</h2>\r\n      <ul className=\"tasks-list\">\r\n        {tasks.map((task, index) => (\r\n          <li key={index} className={`task-item ${task.completed ? 'completed' : ''}`} style={{backgroundColor:\"#fff\"}}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}\r\n              onChange={() => handleTaskCompletion(index)}\r\n              className=\"task-checkbox\"\r\n            />\r\n            <span className=\"task-text\">{task.task}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tasks;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,sDAAsD,EAAE;UAAEC,eAAe,EAAE;QAAK,CAAC,CAAC;QACnH,MAAM;UAAEP,KAAK;UAAEQ;QAAc,CAAC,GAAGH,QAAQ,CAACI,IAAI,CAACA,IAAI;QAEnD,IAAI,CAACT,KAAK,IAAIA,KAAK,CAACU,MAAM,KAAK,CAAC,EAAE;UAChC,MAAMC,eAAe,CAAC,CAAC;QACzB,CAAC,MAAM;UACL,MAAMC,iBAAiB,GAAG,IAAIC,IAAI,CAACL,aAAa,CAAC;UACjD,MAAMM,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;UACxB,MAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACH,KAAK,GAAGF,iBAAiB,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;UAEhF,IAAIG,QAAQ,IAAI,EAAE,EAAE;YAClB,MAAMJ,eAAe,CAAC,CAAC;UACzB,CAAC,MAAM;YACLV,QAAQ,CAACD,KAAK,CAAC;UACjB;QACF;MACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRf,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMV,KAAK,CAACyB,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB,0BAA0B,EAAE,CAAC,CAAC,EAAE;UAAEhB,eAAe,EAAE;QAAK,CAAC,CAAC;QAC7HN,QAAQ,CAACI,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDd,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC5C,MAAMC,YAAY,GAAG1B,KAAK,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;MAC1C,IAAIA,CAAC,KAAKJ,KAAK,EAAE;QACf,OAAO;UAAE,GAAGG,IAAI;UAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;QAAU,CAAC;MAChD;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IAEF3B,QAAQ,CAACyB,YAAY,CAAC;IAEtB,IAAI;MACF,MAAM/B,KAAK,CAACoC,GAAG,CAAC,GAAGV,OAAO,CAACC,GAAG,CAACC,kBAAkB,wBAAwB,EAAE;QAAES,cAAc,EAAEN;MAAa,CAAC,EAAE;QAAEnB,eAAe,EAAE;MAAK,CAAC,CAAC;IACzI,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,IAAIhB,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAoC,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACExC,OAAA;IAAKyC,KAAK,EAAE;MAACC,eAAe,EAAE;AAClC;AACA;AACA,KAAK;MAACC,eAAe,EAAE,SAAS;MAAEC,MAAM,EAAC,OAAO;MAAEC,SAAS,EAAC;IAAmB,CAAE;IAAAT,QAAA,eAC3EpC,OAAA;MAAK8C,SAAS,EAAC,iBAAiB;MAACL,KAAK,EAAE;QAAEI,SAAS,EAAC,kBAAkB;QAAED,MAAM,EAAC,MAAM;QAAEG,QAAQ,EAAC,QAAQ;QAAEJ,eAAe,EAAC;MAAa,CAAE;MAAAP,QAAA,gBACzIpC,OAAA;QAAIyC,KAAK,EAAE;UAACO,KAAK,EAAC,MAAM;UAAEC,SAAS,EAAC;QAAQ,CAAE;QAAAb,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9DxC,OAAA;QAAI8C,SAAS,EAAC,YAAY;QAAAV,QAAA,EACvBjC,KAAK,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEH,KAAK,kBACrB5B,OAAA;UAAgB8C,SAAS,EAAE,aAAaf,IAAI,CAACE,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;UAACQ,KAAK,EAAE;YAACE,eAAe,EAAC;UAAM,CAAE;UAAAP,QAAA,gBAC3GpC,OAAA;YACEkD,IAAI,EAAC,UAAU;YACfC,OAAO,EAAEpB,IAAI,CAACE,SAAU;YACxBmB,QAAQ,EAAEA,CAAA,KAAMzB,oBAAoB,CAACC,KAAK,CAAE;YAC5CkB,SAAS,EAAC;UAAe;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACFxC,OAAA;YAAM8C,SAAS,EAAC,WAAW;YAAAV,QAAA,EAAEL,IAAI,CAACA;UAAI;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAPvCZ,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACtC,EAAA,CAtFQD,KAAK;AAAAoD,EAAA,GAALpD,KAAK;AAwFd,eAAeA,KAAK;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}